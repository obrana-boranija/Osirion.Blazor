@namespace Osirion.Blazor.Cms.Admin.Features.Repository.Components
@inherits BaseComponent
@using Osirion.Blazor.Cms.Admin.Features.Repository.ViewModels
@using Osirion.Blazor.Cms.Admin.Shared.Components
@inject BranchSelectorViewModel ViewModel

<div class="branch-selector @CssClass">
    <div class="branch-header">
        <h2 class="branch-title">@Title</h2>

        <div class="branch-actions">
            <button type="button"
                    class="branch-button branch-button-refresh"
                    title="Refresh branches"
                    @onclick="RefreshBranches">
                <span class="branch-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <path d="M21 12a9 9 0 0 1-9 9c-4.97 0-9-4.03-9-9s4.03-9 9-9c2.39 0 4.68.94 6.4 2.6L12 12" />
                    </svg>
                </span>
            </button>
        </div>
    </div>

    @if (ViewModel.IsLoading)
    {
        <div class="branch-loading">
            <span class="branch-loading-spinner"></span>
            <span>Loading branches...</span>
        </div>
    }
    else if (ViewModel.ErrorMessage != null)
    {
        <div class="branch-error">
            <span class="branch-error-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <circle cx="12" cy="12" r="10" />
                    <line x1="12" y1="8" x2="12" y2="12" />
                    <line x1="12" y1="16" x2="12.01" y2="16" />
                </svg>
            </span>
            <span>@ViewModel.ErrorMessage</span>
            <button type="button" class="branch-button branch-button-small" @onclick="RefreshBranches">
                Retry
            </button>
        </div>
    }
    else if (ViewModel.Branches.Count == 0)
    {
        <div class="branch-empty">
            <span>No branches found. Please select a repository first.</span>
        </div>
    }
    else
    {
        <div class="branch-select-container">
            <select class="branch-select"
                    value="@(ViewModel.SelectedBranch?.Name ?? string.Empty)"
                    @onchange="OnBranchSelected">
                <option value="">@SelectPrompt</option>
                @foreach (var branch in ViewModel.Branches)
                {
                    <option value="@branch.Name">@branch.Name</option>
                }
            </select>
        </div>

        @if (AllowCreateBranch)
        {
            <div class="branch-actions-container">
                @if (ViewModel.IsCreatingNewBranch)
                {
                    <div class="branch-create-form">
                        <div class="branch-form-group">
                            <label class="branch-label">New Branch Name</label>
                            <input type="text"
                                   class="branch-input"
                                   @bind="ViewModel.NewBranchName"
                                   placeholder="Enter branch name" />
                        </div>

                        <div class="branch-form-group">
                            <label class="branch-label">Base Branch</label>
                            <select class="branch-select"
                                    @bind="ViewModel.BaseBranchName">
                                @foreach (var branch in ViewModel.Branches)
                                {
                                    <option value="@branch.Name">@branch.Name</option>
                                }
                            </select>
                        </div>

                        <div class="branch-form-actions">
                            <button type="button"
                                    class="branch-button"
                                    @onclick="@(() => ViewModel.SetCreatingNewBranch(false))">
                                Cancel
                            </button>
                            <button type="button"
                                    class="branch-button branch-button-primary"
                                    @onclick="CreateBranch"
                                    disabled="@(string.IsNullOrWhiteSpace(ViewModel.NewBranchName) || ViewModel.IsCreatingBranch)">
                                @if (ViewModel.IsCreatingBranch)
                                {
                                    <span class="branch-loading-spinner"></span>
                                    <span>Creating...</span>
                                }
                                else
                                {
                                    <span>Create Branch</span>
                                }
                            </button>
                        </div>
                    </div>
                }
                else
                {
                    <button type="button"
                            class="branch-button branch-button-new"
                            @onclick="@(() => ViewModel.SetCreatingNewBranch(true))">
                        <span class="branch-icon">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <line x1="12" y1="5" x2="12" y2="19"></line>
                                <line x1="5" y1="12" x2="19" y2="12"></line>
                            </svg>
                        </span>
                        New Branch
                    </button>
                }
            </div>
        }
    }
</div>