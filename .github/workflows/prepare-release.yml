name: Prepare Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 2.0.1)'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x
            9.0.x

      - name: Update version in project files
        run: |
          FILES=(
            "src/Osirion.Blazor/Osirion.Blazor.csproj"
            "src/Osirion.Blazor.Core/Osirion.Blazor.Core.csproj"
            "src/Osirion.Blazor.Analytics/Osirion.Blazor.Analytics.csproj"
            "src/Osirion.Blazor.Navigation/Osirion.Blazor.Navigation.csproj"
            "src/Osirion.Blazor.Cms/Osirion.Blazor.Cms.csproj"
            "src/Osirion.Blazor.Theming/Osirion.Blazor.Theming.csproj"
          )
          
          for file in "${FILES[@]}"; do
            if [ -f "$file" ]; then
              echo "Processing $file"
              # Print file content before
              echo "Before:"
              cat "$file"
              
              # Update version
              sed -i 's/<Version>[0-9]\+\.[0-9]\+\.[0-9]\+<\/Version>/<Version>${{ github.event.inputs.version }}<\/Version>/g' "$file"
              
              # Print file content after
              echo "After:"
              cat "$file"
              echo "-------------------"
            else
              echo "Warning: $file not found"
            fi
          done

      - name: Update CHANGELOG.md
        run: |
          TODAY=$(date +%Y-%m-%d)
          NEW_VERSION="## [${{ github.event.inputs.version }}] - $TODAY"
          
          awk -v new_version="$NEW_VERSION" '
            /## \[Unreleased\]/ { print $0; print ""; print new_version; next }
            { print }
          ' CHANGELOG.md > temp.md
          mv temp.md CHANGELOG.md

      - name: Ensure Labels Exist
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/labels \
          -d '{"name": "release", "color": "f29513"}' || echo "Label 'release' already exists."
          curl -X POST -H "Authorization: token ${{ secrets.PAT_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/labels \
          -d '{"name": "automated pr", "color": "0e8a16"}' || echo "Label 'automated pr' already exists."

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT_TOKEN }}
          commit-message: "Prepare release ${{ github.event.inputs.version }}"
          branch: "release/${{ github.event.inputs.version }}"
          delete-branch: true
          title: "Release ${{ github.event.inputs.version }}"
          body: |
            Automated PR to prepare release ${{ github.event.inputs.version }}
            
            ## Changes
            - Updated version numbers to ${{ github.event.inputs.version }} in all src projects
            - Updated CHANGELOG.md
            
            Please review the changes and merge if everything looks correct.
          labels: |
            release
            automated pr
