@namespace Osirion.Blazor.Cms.Admin.Features.ContentEditor.Components
@inherits BaseComponent
@using Osirion.Blazor.Cms.Admin.Features.ContentEditor.Components.Shared
@using Osirion.Blazor.Cms.Admin.Shared.Components
@using Osirion.Blazor.Cms.Domain.Models
@using Osirion.Blazor.Cms.Domain.ValueObjects

<div class="content-editor border rounded overflow-hidden d-flex flex-column h-100">
    @if (ViewModel.EditingPost == null)
    {
        <div class="d-flex flex-column align-items-center justify-content-center h-100 bg-light p-4 text-secondary">
            <i class="bi bi-file-earmark-text fs-1 mb-3"></i>
            <p>Select a file to edit or create a new file.</p>
        </div>
    }
    else
    {
        <div class="border-bottom bg-light">
            <ul class="nav nav-tabs px-3 pt-2">
                <li class="nav-item">
                    <button class="nav-link @(ActiveTab == "content" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("content"))">
                        Content
                    </button>
                </li>
                <li class="nav-item">
                    <button class="nav-link @(ActiveTab == "metadata" ? "active" : "")"
                            @onclick="@(() => SetActiveTab("metadata"))">
                        Metadata
                    </button>
                </li>
                <li class="nav-item ms-auto">
                    <button class="btn btn-sm btn-outline-secondary"
                            title="Toggle Preview"
                            @onclick="TogglePreview">
                        <i class="bi bi-eye"></i>
                    </button>
                </li>
            </ul>
        </div>

        <div class="flex-grow-1 overflow-hidden">
            @if (ActiveTab == "content")
            {
                <div class="h-100">
                    <MarkdownEditorWithPreview Content="@ViewModel.EditingPost.Content"
                                               ContentChanged="@((content) => { ViewModel.UpdateContent(content); OnContentChanged(); })"
                                               ShowToolbar="true"
                                               ShowPreview="@IsPreviewVisible" />
                </div>
            }
            else if (ActiveTab == "metadata")
            {
                <div class="h-100">
                    <MetadataEditor Metadata="@ViewModel.EditingPost.Metadata"
                                    MetadataChanged="@((metadata) => { ViewModel.UpdateMetadata(metadata); OnContentChanged(); })"
                                    ShowPreview="true" />
                </div>
            }
        </div>

        <div class="border-top bg-light p-3 d-flex align-items-center justify-content-between">
            <div>
                @if (IsDirty)
                {
                    <span class="text-warning d-inline-flex align-items-center">
                        <i class="bi bi-circle-fill fs-6 me-2" style="font-size: 8px !important;"></i>
                        <span>Changes not saved</span>
                    </span>
                }
            </div>

            <div class="d-flex align-items-center gap-2">
                <button type="button"
                        class="btn btn-outline-secondary"
                        @onclick="DiscardChanges">
                    Discard Changes
                </button>

                @if (ViewModel.IsCreatingNew)
                {
                    <div class="input-group">
                        <span class="input-group-text">File Name:</span>
                        <input type="text"
                               class="form-control"
                               @bind="ViewModel.FileName"
                               @bind:event="oninput"
                               placeholder="Enter file name" />
                    </div>
                }

                <button type="button"
                        class="btn btn-primary"
                        @onclick="SaveChanges"
                        disabled="@(ViewModel.IsSaving || (ViewModel.IsCreatingNew && string.IsNullOrWhiteSpace(ViewModel.FileName)))">
                    @if (ViewModel.IsSaving)
                    {
                        <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                        <span>Saving...</span>
                    }
                    else
                    {
                        <span>Save Changes</span>
                    }
                </button>
            </div>
        </div>
    }
</div>