name: Matrix Testing

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }} / .NET ${{ matrix.dotnet-version }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['8.0.x', '9.0.x']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
  
  browser-tests:
    name: Browser Tests
    runs-on: ubuntu-latest
    needs: test
    if: success() || failure()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    
    - name: Install Playwright
      run: |
        npm init -y
        npm install playwright@latest
        npx playwright install --with-deps
    
    - name: Restore dependencies
      run: dotnet restore tests/Osirion.Blazor.E2ETests/Osirion.Blazor.E2ETests.csproj
    
    - name: Build
      run: dotnet build --no-restore tests/Osirion.Blazor.E2ETests/Osirion.Blazor.E2ETests.csproj
    
    - name: Run browser tests
      run: dotnet test tests/Osirion.Blazor.E2ETests/Osirion.Blazor.E2ETests.csproj --no-build --configuration Release
    
    - name: Upload test artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: browser-test-results
        path: |
          tests/Osirion.Blazor.E2ETests/bin/Release/net8.0/playwright-artifacts
          tests/Osirion.Blazor.E2ETests/TestResults