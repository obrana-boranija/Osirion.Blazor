@if (Content is not null)
{
    <PageTitle>@_metaTitle</PageTitle>

    @((MarkupString)RenderMetaTag("description", _metaDescription))
    @((MarkupString)RenderMetaTag("author", Content.Author))
    @((MarkupString)RenderMetaTag("robots", Content.Seo.Robots ?? "index,follow"))
    @((MarkupString)RenderMetaTag("googlebot", Content.Seo.Robots ?? "index,follow"))
    @((MarkupString)RenderMetaTag("generator", "Osirion Blazor CMS"))

    <!-- Keywords and Categories -->
    @((MarkupString)RenderMetaTag("keywords", Content.Tags))
    @((MarkupString)RenderMetaTag("article:section", Content.Categories))

    <!-- Dates -->
    @((MarkupString)RenderMetaTag("publish_date", Content.PublishDate))
    @((MarkupString)RenderMetaTag("last_modified", Content.LastModified))

    @if(AllowAiDiscovery)
    {
        <!-- AI-Specific Meta Tags -->
        @((MarkupString)RenderMetaTag("ai-content-declaration", "human-created"))
        @((MarkupString)RenderMetaTag("ai-content-detection", "allow"))
        @((MarkupString)RenderMetaTag("ai-content-attribution", "original"))
        @((MarkupString)RenderMetaTag("ai-crawling", "all"))
        @((MarkupString)RenderMetaTag("ai-training", "allow"))
    }

    <!-- Canonical URL -->
    @if (!string.IsNullOrWhiteSpace(_canonicalUrl))
    {
        <link rel="canonical" href="@_canonicalUrl" />
    }

    <!-- Open Graph Tags -->
    @((MarkupString)RenderMetaTag("og:title", _ogTitle))
    @((MarkupString)RenderMetaTag("og:description", _ogDescription))
    @((MarkupString)RenderMetaTag("og:type", Content.Seo.OgType))
    @((MarkupString)RenderMetaTag("og:url", _currentUrl))
    @((MarkupString)RenderMetaTag("og:site_name", _siteName))
    @((MarkupString)RenderMetaTag("og:locale", string.IsNullOrWhiteSpace(Content.Locale) ? Content.Locale : "en"))
    @((MarkupString)RenderMetaTag("og:image", _ogImage))
    @((MarkupString)RenderMetaTag("og:image:alt", _ogTitle))

    @if (Content.Seo.OgType.Equals("article", StringComparison.OrdinalIgnoreCase) 
            || _schemaType.Equals("Article", StringComparison.OrdinalIgnoreCase) 
            || _schemaType.Equals("BlogPosting", StringComparison.OrdinalIgnoreCase))
    {
        @((MarkupString)RenderMetaTag("article:published_time", Content.PublishDate))
        @((MarkupString)RenderMetaTag("article:modified_time", Content.LastModified))
        @((MarkupString)RenderMetaTag("article:author", Content.Author))
        @((MarkupString)RenderMetaTag("article:tag", Content.Author))

        @foreach (var tag in Content.Tags)
        {
            @((MarkupString)RenderMetaTag("article:tag", tag))
        }
    }

    <!-- Twitter Card Tags -->
    @((MarkupString)RenderMetaTag("twitter:card", Content.Seo.TwitterCard ?? "summary_large_image"))
    @((MarkupString)RenderMetaTag("twitter:title", _twitterTitle))
    @((MarkupString)RenderMetaTag("twitter:description", _twitterDescription))
    @((MarkupString)RenderMetaTag("twitter:image", _twitterImage))
    @((MarkupString)RenderMetaTag("twitter:image:alt", _twitterTitle))
    @((MarkupString)RenderMetaTag("twitter:site", TwitterSite))
    @((MarkupString)RenderMetaTag("twitter:creator", TwitterCreator))

    <!-- Additional SEO Tags -->
    @((MarkupString)RenderMetaTag("theme-color", "#ffffff"))
    @((MarkupString)RenderMetaTag("msapplication-TileColor", "#ffffff"))
    @((MarkupString)RenderMetaTag("format-detection", "telephone=yes"))
    @((MarkupString)RenderMetaTag("apple-mobile-web-app-capable", "yes"))
    @((MarkupString)RenderMetaTag("apple-mobile-web-app-status-bar-style", "default"))

    <!-- Performance Hints -->
    @((MarkupString)RenderMetaTag("dns-prefetch", _baseUrl))
    @((MarkupString)RenderMetaTag("preconnect", _baseUrl))

    <!-- JSON-LD Structured Data -->
    @if (!string.IsNullOrWhiteSpace(_jsonLdContent))
    {
        <script type="application/ld+json">
            @((MarkupString)_jsonLdContent)
        </script>
    }
}