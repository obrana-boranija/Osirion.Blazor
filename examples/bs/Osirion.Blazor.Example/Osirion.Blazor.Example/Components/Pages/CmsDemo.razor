@page "/cms-demo"
@using Osirion.Blazor.Cms.Components
@using Osirion.Blazor.Cms.Domain.Services

<PageTitle>CMS Demo - Osirion.Blazor</PageTitle>

<div class="container mt-4">
    <h1>Osirion CMS Demo</h1>
    <p class="lead">This page demonstrates the Osirion.Blazor.Cms component library.</p>
    
    <div class="row mt-4">
        <div class="col-md-8">
            <div class="card shadow-sm">
                <div class="card-body">
                    <ContentView Path="@_contentPath"  />
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-header">
                    <h5 class="mb-0">Content Selection</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="contentPath" class="form-label">Content Path</label>
                        <input type="text" class="form-control" id="contentPath" @bind="_contentPath" />
                    </div>
                    <div class="mb-3">
                        <label for="providerId" class="form-label">Provider ID</label>
                        <select class="form-select" id="providerId" @bind="_providerId">
                            @foreach (var provider in _providers)
                            {
                                <option value="@provider.Value">@provider.Key</option>
                            }
                        </select>
                    </div>
                    <button class="btn btn-primary" @onclick="LoadContent">Load Content</button>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? CategorySlug { get; set; }

    [Parameter]
    public string? TagSlug { get; set; }

    [Parameter]
    public string? locale { get; set; }

    [Inject]
    private IContentProviderManager ContentProviderManager { get; set; } = default!;

    private string Directory => "blog";
    private string Locale => locale ?? "en";

    private string PageTitle =>
        !string.IsNullOrEmpty(CategorySlug) ? $"Category: {CategorySlug}" :
        !string.IsNullOrEmpty(TagSlug) ? $"Tag: {TagSlug}" :
        "Blog";

    private string _contentPath = "blog/sample-post.md";
    private string _providerId = "";
    private Dictionary<string, string> _providers = new();

    /// <summary>
    /// Initialize component when parameters are set
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        // Get the available providers
        foreach (var provider in ContentProviderManager.GetAllProviders())
        {
            _providers.Add(provider.DisplayName, provider.ProviderId);
        }

        // Set default provider
        var defaultProvider = ContentProviderManager.GetDefaultProvider();
        if (defaultProvider != null)
        {
            _providerId = defaultProvider.ProviderId;
        }
        else if (_providers.Count > 0)
        {
            // If no default, use the first provider
            _providerId = _providers.Values.First();
        }

        await base.OnInitializedAsync();
    }

    /// <summary>
    /// Load the content when the button is clicked
    /// </summary>
    private void LoadContent()
    {
        // Component will automatically refresh with new parameters
        StateHasChanged();
    }
}