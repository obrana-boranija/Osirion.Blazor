@namespace Osirion.Blazor.Theming.Components
@using Microsoft.Extensions.Options
@using Osirion.Blazor.Components
@using Osirion.Blazor.Theming.Services
@inherits OsirionComponentBase
@inject IOptions<ThemingOptions>? Options
@inject IThemeService ThemeService

@* Include core stylesheets *@
<link rel="stylesheet" href="_content/Osirion.Blazor.Core/css/index.css" />

@if (!EffectiveOptions.UseDefaultStyles)
{
    <link rel="stylesheet" href="_content/Osirion.Blazor.Theming/css/index.css" />
}

@* Apply custom variables *@
@if (!string.IsNullOrWhiteSpace(CustomVariables))
{
    <style>
        :root {
        @((MarkupString)CustomVariables)
        }
    </style>
}

@* Apply generated theme variables *@
@if (!string.IsNullOrWhiteSpace(GeneratedVariables))
{
    <style>
        :root {
        @((MarkupString)GeneratedVariables)
        }
    </style>
}

@* Framework integration script *@
@if (EffectiveOptions.Framework != CssFramework.None)
{
    @((MarkupString)script)
}

@functions {
    private MarkupString script => (MarkupString)GetScript();
}