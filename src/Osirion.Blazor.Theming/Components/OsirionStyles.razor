@using Osirion.Blazor.Theming.Services
@inherits OsirionComponentBase
@inject IOptions<ThemingOptions>? Options
@inject IThemeService ThemeService
@implements IDisposable

<link rel="stylesheet" href="_content/Osirion.Blazor.Core/css/index.css" />

@if (!EffectiveOptions.UseDefaultStyles)
{
    <link rel="stylesheet" href="_content/Osirion.Blazor.Theming/css/index.css" />
    
}

@if (!string.IsNullOrEmpty(CustomVariables))
{
        <style>
            :root {
        @((MarkupString)CustomVariables)
            }
        </style>
}

@if (!string.IsNullOrEmpty(GeneratedVariables))
{
        <style>
            :root {
        @((MarkupString)GeneratedVariables)
            }
        </style>
}

@if (EffectiveOptions.Framework != CssFramework.None)
{
        <style id="osirion-framework-style">
            html {
        @(GetFrameworkClassDeclaration())
            }
        </style>

    @* This script is essential for SSR pages that don't have ThemeProvider *@
        <script id="osirion-framework-script">
            (function() {
                function applyFrameworkIntegration() {
                    const htmlElement = document.documentElement || document.querySelector('html');
                    const frameworkClass = "@GetFrameworkClass()";

                    if (htmlElement && frameworkClass && !htmlElement.classList.contains(frameworkClass)) {
                        // Apply the correct framework class
                        htmlElement.classList.add(frameworkClass);
                    }
                }

                // Apply immediately
                applyFrameworkIntegration();

                // Apply on DOMContentLoaded
                if (document.readyState === 'loading') {
                    document.addEventListener('DOMContentLoaded', applyFrameworkIntegration);
                }
            })();
        </script>
}