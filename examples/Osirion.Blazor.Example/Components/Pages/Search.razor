@page "/search"
@inject IGitHubCmsService CmsService
@inject NavigationManager NavigationManager
@using Osirion.Blazor.Models.Cms
@using Osirion.Blazor.Services.GitHub

<h1>Search Results</h1>

@if (IsLoading)
{
    <div class="loading">Searching...</div>
}
else
{
    @if (!string.IsNullOrEmpty(Query))
    {
        <h2>Results for "@Query"</h2>

        @if (Results.Count > 0)
        {
            <ContentList ContentItems="@Results" />
        }
        else
        {
            <div class="no-results">No results found for "@Query".</div>
        }
    }
    else
    {
        <p>Please enter a search term</p>
    }

    <SearchBox Placeholder="Search again..." />
}

@code {
    private string Query { get; set; } = string.Empty;
    private List<ContentItem> Results { get; set; } = new();
    private bool IsLoading { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        if (uri.Query.Length > 0)
        {
            var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
            Query = queryParams["q"] ?? string.Empty;

            if (!string.IsNullOrEmpty(Query))
            {
                await PerformSearch();
            }
        }

        IsLoading = false;
    }

    private async Task PerformSearch()
    {
        IsLoading = true;

        try
        {
            Results = await CmsService.SearchContentItemsAsync(Query);
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error searching: {ex.Message}");
            Results = new List<ContentItem>();
        }
        finally
        {
            IsLoading = false;
        }
    }
}